version: 2.1

executors:
  node_16:
    docker:
      - image: circleci/node:16
orbs:
  slack: circleci/slack@4

commands:
  # debug only
  halt:
    steps:
      - run: circleci step halt

  # https://circleci.com/docs/2.0/caching/#basic-example-of-dependency-caching
  save_dependencies:
    steps:
      - save_cache:
          key: yarn-deps-v1-{{ checksum "./yarn.lock" }}
          paths:
            - ./node_modules

  # https://circleci.com/docs/2.0/caching/#restoring-cache
  load_dependencies:
    steps:
      - restore_cache:
          keys:
            - yarn-deps-v1-{{ checksum "./yarn.lock" }}

  setup:
    steps:
      - checkout
      - load_dependencies
      - run:
          name: Set .evn.yml file from CI "ENV_FILE" (base64 env variable)
          command: echo "$ENV_FILE" | base64 --decode > ./config/.env.yml
      - run:
          command: yarn install
          no_output_timeout: 120s
      - save_dependencies

  run_tests:
    steps:
      - run:
          command: yarn lint
          no_output_timeout: 120s
      - run:
          command: yarn lint:tsc
          no_output_timeout: 120s
      - run:
          name: Test changed files only
          command: yarn test:ci --passWithNoTests --coverage=false $((git diff --name-only --diff-filter=ACMR origin/main.. | grep -i -E '\.([jt]sx?)$' | grep -v -i '.stories.') || echo 'no-files')
          no_output_timeout: 180s

  run_publicate_staging:
    steps:
      - run:
          command: yarn build --env SENTRY-staging
          no_output_timeout: 180s
      - run:
          command: yarn deploy staging
          no_output_timeout: 120s

  run_build:
    steps:
      - run:
          command: yarn build:progress
          no_output_timeout: 120s

jobs:
  'Tests and Coverage':
    executor: node_16
    steps:
      - setup
      - run_tests
      # https://circleci.com/developer/orbs/orb/circleci/slack
      - slack/notify:
          event: 'fail'
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":doh: $CIRCLE_USERNAME :pandaomg: failed job :rotating_light:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "`<$CIRCLE_BUILD_URL|:circleci-fail: CircleCI>`  |  `<https://bitbucket.org/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commits/$CIRCLE_SHA1|:bitbucket: BitBucket>`  |  `<https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commit/$CIRCLE_SHA1|:github: GithHub>`"
                  }
                }
              ]
            }
      - slack/notify:
          event: 'pass'
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":woot: hey $CIRCLE_USERNAME, your changes are ready for review."
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "`<$CIRCLE_BUILD_URL|:circleci-pass: CircleCI>`  |  `<https://bitbucket.org/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commits/$CIRCLE_SHA1|:bitbucket: BitBucket>`  |  `<https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commit/$CIRCLE_SHA1|:github: GithHub>`"
                  }
                }
              ]
            }

  'Production build':
    executor: node_16
    steps:
      - setup
      - run_tests
      - run_build
      - slack/notify:
          event: 'fail'
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":rotating_light: somebody call $CIRCLE_USERNAME @$CIRCLE_USERNAME :omg-onoz: :omgomgomg: *$CIRCLE_JOB* failed :rotating_light:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "`<$CIRCLE_BUILD_URL|:circleci-fail: CircleCI>`  |  `<https://bitbucket.org/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commits/$CIRCLE_SHA1|:bitbucket: BitBucket>`  |  `<https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commit/$CIRCLE_SHA1|:github: GithHub>`"
                  }
                }
              ]
            }
      - slack/notify:
          event: 'pass'
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":woot: changes from $CIRCLE_USERNAME were merged! :allthethings:"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "`<$CIRCLE_BUILD_URL|:circleci-pass: CircleCI>`  |  `<https://bitbucket.org/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commits/$CIRCLE_SHA1|:bitbucket: BitBucket>`  |  `<https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/commit/$CIRCLE_SHA1|:github: GithHub>`"
                  }
                }
              ]
            }

workflows:
  pr-tests:
    jobs:
      - 'Tests and Coverage':
          context: custom-context
          filters:
            branches:
              ignore:
                - main

  merge-build:
    jobs:
      - 'Production build':
          context: custom-context
          filters:
            branches:
              only:
                - main
